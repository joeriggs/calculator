
================== C Implementation of Prototype Calculator. ==================

- Basic implementation:

- Bugs:

- Enhanced implementation:
  - Modify operand.c to use tables to point to the dec or hex functions.
    - Rename fp_exp.c to operator_exp.c.
    - Rename hex.c to operand_base_16.c.
    - Rename bcd.c to operand_base_10.c.
    - Remove public references from header files (hex.h and bcd.h).
    - Modify operator_exp.c to use "operand" objects instead of "bcd".  This
      will allow us to get rid of the public bcd_op_xxx() functions, and it'll
      set us up if we want to do exponentiation of non-base-10 numbers.
      - Remove "#include "bcd.h" from operator_exp.[ch].  They should include
        operand.h instead.
  - Hex operators:
    - Modulus
    - Shift Left
    - Shift Right
    - Rotate Left
    - Rotate Right
  - Parser to make sure equation is valid.
  - calculator class mode that processes the equation in real time:
    - Configurable by the user.
      - Change cmdline UI to have a 'p' ('p' is for processing) switch.
      - calculator::set_processing_mode() method.
    - Parse the infix each time we get an operator.
    - Change calculator class to return the top of the operand stack each
      time we get a new operator.
  - Change operand class to support configurable word size.
    - HEX mode only.  Disabled in decimal mode.
    - operand::operand_set_word_size(int size) (8, 16, 32, 64, 128).
    - operand::operand_add_char() uses word size.
    - Add a status indicator as "-- hex -- 8-bit -->  <--" to console.
  - Should we disable 's' in Hex mode?  Or should we create a signed/unsigned
    option for Hex mode?
  - Revisit fp_exp.c to see if we can find a better algorithm.  The n-th power
    guessing algorithm can take a very long time.

- Cleanup, refactoring, and beautification:
  - Change classes so you can say "stack this" instead of "stack *this".
    - Make sure we can create an object without calling new/delete.  This
      makes it easier to deal with shortterm variables.
  - Change raw_stdin class to "console" class.
    - Add the stderr display stuff as a method.
    - Add signal handler for CTRL-C.

- Unit Testing:
  - Create extremely robust TDD-style tests for each class.

- System Testing:
  - Run a memory leak tool (valgrind) to check for leaks.  For example:
    - Check to make sure we're deleting the operator and operand objects when
      we're done with them in postfix.  Probably need to write a loop test that
      will run overnight and check for memory leaks.  An alternative would be
      to use a tool that looks for memory leaks.
  - Multi-platform testing.
    - Look into using Vagrant or Docker to create additional test beds.
    - Windows testing?
    - MacOS testing?
  - Connect to Codeship.

=============== End of C Implementation of Prototype Calculator. ==============

